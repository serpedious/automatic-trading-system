version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.11

executors:
  default:
    docker:
      - image: circleci/node:10.17.0
      - image: circleci/python:2.7
        # aws_auth:
        #     aws_access_key_id: 
        #     aws_secret_access_key: $ECR_AWS_SECRET_ACCESS_KEY

# commands:
#   npm_install:
#     steps:
#       - restore_cache:
#           key: dependency-cache-{{ checksum "package.json" }}
#       - run: npm install
#       - save_cache:
#           key: dependency-cache-{{ checksum "package.json" }}
#           paths:
#               - node_modules

jobs:
  test_front:
    executor: default
    working_directory: ~/workspace/
    steps:
      - checkout
      - run:
          name: install
          command: npm install
          working_directory: front
      - run:
          name: jest test
          command: npm run test
          working_directory: front

  deploy_front:
    executor: default
    working_directory: ~/workspace/front
    steps:
      - checkout
      - run:
          name: install
          command: npm install
          working_directory: front
      - run:
          name: build
          command: npm run generate
          working_directory: front
      - aws-s3/sync:
          from: front/dist
          to: s3://automatic-trading-system-front/
          overwrite: true

  test_server:
    executor: default
    docker:
      - image: circleci/golang:latest
    working_directory: ~/workspace/server
    steps:
      - checkout
      - run:
          name: test golang api
          command: go test -run ''
          working_directory: server

  deploy_server:
    executor: default
    working_directory: ~/workspace/server
    steps:
      - checkout
      - run:
          name: deploy for production
          command: |
            echo -e "Host git-codecommit.*.amazonaws.com\n  User ${IAM_SSH_KEY_ID}\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null" >> ${HOME}/.ssh/config
            git push ssh://git-codecommit.ap-northeast-1.amazonaws.com/v1/repos/automatic_api_repo main
          working_directory: server


# workflows:
#   version: 2
#   continuous-deploy:
#     jobs:
#       - test_server
#       - deploy_server:
#           requires:
#             - test_server
#           filters:
#             branches:
#               only: main
#       - test_front
#       - deploy_front:
#           requires:
#             - test_front
#           filters:
#             branches:
#               only: main
